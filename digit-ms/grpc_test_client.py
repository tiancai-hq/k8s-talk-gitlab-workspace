
from __future__ import print_function

import argparse

import grpc

import mlservice_pb2
import mlservice_pb2_grpc
bstrtest=b"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQv/rDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHP/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAANn//////3AAAAAAAAAAAAAAAAAAAAAAAAAAAE3///5U/v//EwAAAAAAAAAAAAAAAAAAAAAAAAn///8SAD///+oAAAAAAAAAAAAAAAAAAAAAAADF//9XAAAA0f//BgAAAAAAAAAAAAAAAAAAAAAI///qAAAU7P///wAAAAAAAAAAAAAAAAAAAAAAU///KpH3/////1AAAAAAAAAAAAAAAAAAAAAAAH//////////zwgAAAAAAAAAAAAAAAAAAAAAAACo//////SYEQAAAAAAAAAAAAAAAAAAAAAAAFv7/////VcAAAAAAAAAAAAAAAAAAAAAAAAAAJL//////58AAAAAAAAAAAAAAAAAAAAAAAAAAFP///+B9///UwAAAAAAAAAAAAAAAAAAAAAAAAL///8TABj///9TAAAAAAAAAAAAAAAAAAAAAAB4//9UAAAAO////1MAAAAAAAAAAAAAAAAAAAAA6//9AAAAAAA4////VAAAAAAAAAAAAAAAAAAAAPD/9gAAAAAAADv///89AAAAAAAAAAAAAAAAAADw//YAAAAAAAAAP///9gAAAAAAAAAAAAAAAAAA8P/2AAAAAAAHgf////8CAAAAAAAAAAAAAAAAAPD/9gAAAACw//////1MAAAAAAAAAAAAAAAAAADr//0AC2b7/////VoAAAAAAAAAAAAAAAAAAAAAi///9//////1KQAAAAAAAAAAAAAAAAAAAAAAABL///////+BAAAAAAAAAAAAAAAAAAAAAAAAAAAAW+/wmEUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ/gICAgDkAAAAAAAAAAAAAAAAAAAAAAAAAAADl////////AgAAAAAAAAAAAAAAAAAAAAAAAAAB/////////+wAAAAAAAAAAAAAAAAAAAAAAAAAD///bAn/////kQAAAAAAAAAAAAAAAAAAAAAAAA///z8ACk3//48AAAAAAAAAAAAAAAAAAAAAAABP//8QAAAW//8/AAAAAAAAAAAAAAAAAAAAAAAAf///CgAAwv//CgAAAAAAAAAAAAAAAAAAAAAAAID//wcAAP7/7gAAAAAAAAAAAAAAAAAAAAAAAACA//8HAJD//48AAAAAAAAAAAAAAAAAAAAAAAAAgP//BwX///8HAAAAAAAAAAAAAAAAAAAAAAAAAID//xP1//83AAAAAAAAAAAAAAAAAAAAAAAAAAB2///9///pAAAAAAAAAAAAAAAAAAAAAAAAAAAACP////+6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEP/////EwAAAAAAAAAAAAAAAAAAAAAAAAAAAKz///////9sAAAAAAAAAAAAAAAAAAAAAAAAANz///9Ulv///5EAAAAAAAAAAAAAAAAAAAAAALH///YVAABT////FAAAAAAAAAAAAAAAAAAAAGX///cBAAAAACj//6cAAAAAAAAAAAAAAAAAAD7///8RAAAAAACo//+LAAAAAAAAAAAAAAAAAAz///8tAAAAAAC7///3AAAAAAAAAAAAAAAAAAv7//9fAAAAAArv////EgAAAAAAAAAAAAAAAADc//+yAAAAABz7///0EAAAAAAAAAAAAAAAAAAA8P/4AAAAQ9/////PAQAAAAAAAAAAAAAAAAAAAO///IDe/f////+vAAAAAAAAAAAAAAAAAAAAAACP/////////+AaAAAAAAAAAAAAAAAAAAAAAAAAANv////qbwMAAAAAAAAAAAAAAAAAAAAAAA=="


def run(host, port):
    channel = grpc.insecure_channel('%s:%d' % (host, port))
    stub = mlservice_pb2_grpc.MLServiceStub(channel)
    request = mlservice_pb2.Base64ImageString(
        image=bstrtest
    )
    response = stub.PredictDigit(request)
    print("result: " + str(response.result))


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--host', help='host name', default='localhost', type=str)
    parser.add_argument('--port', help='port number', default=50052, type=int)

    args = parser.parse_args()
    run(args.host, args.port)
